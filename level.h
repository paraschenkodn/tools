#ifndef LEVEL_H
#define LEVEL_H
/// Каждый уровень (отдельная сцена) содержит:
/// 1. состояние камеры и матриц преобразования для текущего уровня
/// 2. алгоритм отображения моделей и их поведение и взаимодействие на сцене - level_draw(DRAW_LAW)
/// 3. массив отображаемых моделей, которые в свою очередь содержат:
/// a. массив моделей-примитивов для отображения модели
/// б. функции и алгоритм рисования модели, её отображения model_draw(DRAW_LAW)
/// в. состояния и алгоритмы трансформации модели
/// с. примитивы должны содержать информацию:
/// I. режим отрисовки примитива (DRAW_NORM | DRAW_SFBO ... etc)
/// II. настраиваемые параметры *****
/// DRAW_LAW - задаёт режим рисования, например DRAW_SFBO задаёт режим рисования в буфер выбора объектов

/// В нашей карте пока один уровень отображения сцены, который реализован целиком в классе Scene

#define DRAW_NORM   1   // рисование в буфер рендеринга
#define DRAW_SFBO   2   // рисование в буфер "выбора"
#define DRAW_SOME   4   // резерв

#include "cameraquat.h"

class Level
{
public:
    Level();
};

#endif // LEVEL_H
